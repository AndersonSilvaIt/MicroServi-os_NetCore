Pacotes necessários 

	<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="3.1.3" />
	<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="3.1.3" />
	<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="3.1.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore" Version="3.1.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore.Abstractions" Version="3.1.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore.Relational" Version="3.1.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="3.1.3" />
	<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="3.1.3" />
	
Criado a migration para iniciar (precisa setar o projeto de API como startup projetct) ..

Add-Migration Inicial
Update-database

Implementado a controller de Identidade login e criação de usuário ...


Implementado a documentação da API usando o Swagger.
necesário isntalar o pacote do swagger ...
<PackageReference Include="Swashbuckle.AspNetCore" Version="5.3.3" />

no startup é adicionado a referência para usar o Swagger

			services.AddSwaggerGen(c => {
				c.SwaggerDoc("v1", new OpenApiInfo {

					Title = "NerdStore Enterprise Identity API",
					Description = "Esta API faz parte do curso de ASP.NET Core Enterprise Applications.",
					Contact = new OpenApiContact() {  Name = "Anderson", Email = "anderson.silvait@outlook.com"},
					License = new OpenApiLicense() {  Name = "MIT", Url = new System.Uri("https://opensource.org/licenses/MIT")}
				}); 
			});
			
			app.UseSwagger();
			app.UseSwaggerUI( c=> {
				c.SwaggerEndpoint("/swagger/v1/swagger.json", "v1");
			});
			
		no arquivo de  coniguração, trocar para inicializar com o swagger 
		
    "IIS Express": {
      "commandName": "IISExpress",
      "launchBrowser": true,
      "launchUrl": "swagger",
      "environmentVariables": {
        "ASPNETCORE_ENVIRONMENT": "Development"
      }
    },
    "NSE.Identidade.API": {
        "commandName": "Project",
        "launchBrowser": true,
        "launchUrl": "swagger",
        "environmentVariables": {
            "ASPNETCORE_ENVIRONMENT": "Development"
        },
        "applicationUrl": "https://localhost:5001;http://localhost:5000"
    }

o projeto atual está configurado para realizar o debug com o docker, agora é trocado para rodar no iis

aplicação -> propriedades -> Debug --> mudar de docker para IIS-EXPRESS

Se eu colocar o atributo [ApiController] no cabeçalho do controller, no teste do swagger, ele irá apresentar o json para enviar
o POST, se tirar, ele é mostrado como um formulário.